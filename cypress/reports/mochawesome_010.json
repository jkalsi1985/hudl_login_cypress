{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-31T13:06:27.203Z",
    "end": "2025-03-31T13:06:27.835Z",
    "duration": 632,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fe5a197f-8317-460e-9ed3-615b42b8ad77",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "file": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
          "title": "Current Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct weather data with UK postcode SW1E5JL",
              "fullTitle": "Current Weather API Test should return correct weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body.location.name).to.eq('London');\n  expect(response.body.location.region).to.eq('London');\n  expect(response.body.location.country).to.eq('UK');\n  expect(response.body.location.tz_id).to.eq('Europe/London');\n  expect(response.body).to.have.property('current');\n  expect(response.body.current.condition.text).to.be.oneOf(['Sunny', 'Partly cloudy', 'Clear']);\n  expect(response.body.current.temp_c).to.be.a('number');\n  expect(response.body.current.wind_dir).to.eq('ENE');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "a0207ae8-586f-42cc-8487-18215320f7a8",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90045",
              "fullTitle": "Current Weather API Test should return weather data for query: 90045",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "0de1ea0e-e4ea-44aa-a681-80bc53563327",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: M5V2Z2",
              "fullTitle": "Current Weather API Test should return weather data for query: M5V2Z2",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "2778a9f8-963c-4275-93ca-e71eb21a9f01",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: hampshire",
              "fullTitle": "Current Weather API Test should return weather data for query: hampshire",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "304be49e-9a14-4c12-8e71-6882ab2dffee",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Current Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "f830b370-6223-4fee-a020-081a2483205d",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Current Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "65ffcffd-7793-4aea-b306-f11b7b93fbae",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Current Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=$Â£$dsd&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "6006041f-ab16-4e39-b8b1-ef923771bb45",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0207ae8-586f-42cc-8487-18215320f7a8",
            "0de1ea0e-e4ea-44aa-a681-80bc53563327",
            "2778a9f8-963c-4275-93ca-e71eb21a9f01",
            "304be49e-9a14-4c12-8e71-6882ab2dffee",
            "f830b370-6223-4fee-a020-081a2483205d",
            "65ffcffd-7793-4aea-b306-f11b7b93fbae",
            "6006041f-ab16-4e39-b8b1-ef923771bb45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}