{
  "stats": {
    "suites": 15,
    "tests": 80,
    "passes": 79,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 80,
    "passPercent": 98.75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-03-31T11:40:45.712Z",
    "end": "2025-03-31T13:08:41.058Z",
    "duration": 5275346
  },
  "results": [
    {
      "uuid": "7d367262-b5a2-4c87-95ba-be3c9193b925",
      "title": "",
      "fullFile": "cypress/e2e/saucedemo.cy.js",
      "file": "cypress/e2e/saucedemo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2dcfc04-1923-4907-8f16-c68962b2b182",
          "title": "Sauce Lab E2E Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login succcessfully without remember me ticked",
              "fullTitle": "Sauce Lab E2E Flow login succcessfully without remember me ticked",
              "timedOut": null,
              "duration": 1631,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "6ca06039-1553-45e6-9fa5-26ecb788a43f",
              "parentUUID": "c2dcfc04-1923-4907-8f16-c68962b2b182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add sauce labs backpack to the shopping cart successfully",
              "fullTitle": "Sauce Lab E2E Flow add sauce labs backpack to the shopping cart successfully",
              "timedOut": null,
              "duration": 1229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login successfully\ncy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");\n// Add Sauce Labs Backpack to shopping cart\ncy.addSauceLabBackPackToShoppingCart();\ncy.get(_selectors.productList.inventoryItemPrice).should('be.visible').and('contain', '$29.99');\ncy.get(_selectors.productList.addToCartButton).should(\"not.exist\");\ncy.get(_selectors.productList.removeSauceLabBackPackButton).should(\"be.visible\");\n// View the shopping cart\ncy.clickToViewShoppingCart();\ncy.get(_selectors.productList.inventoryItemName).should(\"contain\", \"Sauce Labs Backpack\");\ncy.get(_selectors.productList.inventoryItemPrice).should('be.visible').and('contain', '$29.99');\ncy.get(_selectors.shoppingCart.checkoutButton).should(\"be.visible\");\ncy.get(_selectors.shoppingCart.removeButton).should(\"be.visible\");\ncy.get(_selectors.shoppingCart.continueButton).should(\"be.visible\");",
              "err": {},
              "uuid": "ac21f162-6985-41ac-9b9a-c0d7914e1292",
              "parentUUID": "c2dcfc04-1923-4907-8f16-c68962b2b182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ca06039-1553-45e6-9fa5-26ecb788a43f",
            "ac21f162-6985-41ac-9b9a-c0d7914e1292"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fc90f26a-a369-413e-bc33-66325af324a8",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "file": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
          "title": "Current Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct weather data with UK postcode SW1E5JL",
              "fullTitle": "Current Weather API Test should return correct weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 580,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body.location.name).to.eq('London');\n  expect(response.body.location.region).to.eq('London');\n  expect(response.body.location.country).to.eq('UK');\n  expect(response.body.location.tz_id).to.eq('Europe/London');\n  expect(response.body).to.have.property('current');\n  expect(response.body.current.condition.text).to.eq('Sunny');\n  expect(response.body.current.temp_c).to.be.a('number');\n  expect(response.body.current.wind_dir).to.eq('ENE');\n});",
              "err": {
                "message": "AssertionError: expected 'Partly cloudy' to equal 'Sunny'",
                "estack": "AssertionError: expected 'Partly cloudy' to equal 'Sunny'\n    at Context.eval (webpack://hudl_login_functionality_task/./cypress/e2e/weatherApi/currentWeather.cy.js:24:54)\n    at getRet (http://localhost:57139/__cypress/runner/cypress_runner.js:119371:20)\n    at tryCatcher (http://localhost:57139/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:57139/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:57139/__cypress/runner/cypress_runner.js:119382:66)\n    at Context.then (http://localhost:57139/__cypress/runner/cypress_runner.js:119633:21)",
                "diff": "- 'Partly cloudy'\n+ 'Sunny'\n"
              },
              "uuid": "4e53b4ea-7a31-4604-81ac-1db3aff060f8",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90045",
              "fullTitle": "Current Weather API Test should return weather data for query: 90045",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "eb8aae9c-2a73-43d3-a351-7aa567c8446b",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: M5V2Z2",
              "fullTitle": "Current Weather API Test should return weather data for query: M5V2Z2",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "860f276c-0d21-4f52-962e-c4477c0aa777",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: hampshire",
              "fullTitle": "Current Weather API Test should return weather data for query: hampshire",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "43101794-0f04-418b-878f-2a60668a341c",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Current Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "b25e910c-f9bd-4274-bba5-09fbe1dd7799",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Current Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "485d1a2c-7803-468e-974b-bb967a5316d1",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Current Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=$£$dsd&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "6b2f1e55-6b4a-419b-b86a-78b832192708",
              "parentUUID": "a59b4156-66cc-4ccd-b9ad-2b4f579561fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb8aae9c-2a73-43d3-a351-7aa567c8446b",
            "860f276c-0d21-4f52-962e-c4477c0aa777",
            "43101794-0f04-418b-878f-2a60668a341c",
            "b25e910c-f9bd-4274-bba5-09fbe1dd7799",
            "485d1a2c-7803-468e-974b-bb967a5316d1",
            "6b2f1e55-6b4a-419b-b86a-78b832192708"
          ],
          "failures": [
            "4e53b4ea-7a31-4604-81ac-1db3aff060f8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 994,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c1812da6-303c-4119-800a-60e727548d61",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "file": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
          "title": "Timezone Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct timezone weather data with UK postcode SW1E5JL",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('London');\n  expect(location.region).to.eq('London');\n  expect(location.country).to.eq('UK');\n  expect(location.lat).to.eq(51.4970016479492);\n  expect(location.lon).to.eq(-0.137999996542931);\n  // expect(location.localtime_epoch).to.eq(1743410712);\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "cf29226b-edc0-42b4-9b0f-3e3c3bffcd10",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with Canada postcode M5V2Z2",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with Canada postcode M5V2Z2",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=M5V2Z2&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Toronto');\n  expect(location.region).to.eq('');\n  expect(location.country).to.eq('Canada');\n  expect(location.lat).to.eq(43.6514015197754);\n  expect(location.lon).to.eq(-79.3825988769531);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Toronto');\n});",
              "err": {},
              "uuid": "e11bf36f-4f46-41a5-beb4-8d6b452066cf",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with US postcode 90045",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with US postcode 90045",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=90045&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Los Angeles');\n  expect(location.region).to.eq('California');\n  expect(location.country).to.eq('USA');\n  expect(location.lat).to.eq(33.9631004333496);\n  expect(location.lon).to.eq(-118.393997192383);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Los_Angeles');\n});",
              "err": {},
              "uuid": "aeccad64-d8af-430f-b066-3e74a3486b0c",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: basingstoke",
              "fullTitle": "Timezone Weather API Test should return weather data for query: basingstoke",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "c551470a-6858-492f-9c1a-f985eed5f455",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "23c78773-0980-4c15-8eb1-e0304b8da051",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "276a5cba-cdf5-4d50-a62b-4b9795551c13",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Timezone Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=324234&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "b5034dc8-1b06-4e8a-a171-0193165760e4",
              "parentUUID": "e1d70a0a-8891-4298-95c4-36c2779c2b0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf29226b-edc0-42b4-9b0f-3e3c3bffcd10",
            "e11bf36f-4f46-41a5-beb4-8d6b452066cf",
            "aeccad64-d8af-430f-b066-3e74a3486b0c",
            "c551470a-6858-492f-9c1a-f985eed5f455",
            "23c78773-0980-4c15-8eb1-e0304b8da051",
            "276a5cba-cdf5-4d50-a62b-4b9795551c13",
            "b5034dc8-1b06-4e8a-a171-0193165760e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 424,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "204e7abf-44fe-4255-ad51-a7dd21520626",
      "title": "",
      "fullFile": "cypress/e2e/saucedemo.cy.js",
      "file": "cypress/e2e/saucedemo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09693514-a88f-4078-ac48-4b3ff13b0ad3",
          "title": "Sauce Lab E2E Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login succcessfully without remember me ticked",
              "fullTitle": "Sauce Lab E2E Flow login succcessfully without remember me ticked",
              "timedOut": null,
              "duration": 1273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "915dfbdb-ca60-4340-8114-f37865ee25c4",
              "parentUUID": "09693514-a88f-4078-ac48-4b3ff13b0ad3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add sauce labs backpack to the shopping cart successfully",
              "fullTitle": "Sauce Lab E2E Flow add sauce labs backpack to the shopping cart successfully",
              "timedOut": null,
              "duration": 1229,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login successfully\ncy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");\n// Add Sauce Labs Backpack to shopping cart\ncy.addSauceLabBackPackToShoppingCart();\ncy.get(_selectors.productList.inventoryItemPrice).should('be.visible').and('contain', '$29.99');\ncy.get(_selectors.productList.addToCartButton).should(\"not.exist\");\ncy.get(_selectors.productList.removeSauceLabBackPackButton).should(\"be.visible\");\n// View the shopping cart\ncy.clickToViewShoppingCart();\ncy.get(_selectors.productList.inventoryItemName).should(\"contain\", \"Sauce Labs Backpack\");\ncy.get('.inventory_item_price').should('be.visible').then($price => {\n  const priceText = $price.text();\n  try {\n    expect(priceText).to.include('$');\n    const priceValue = parseFloat(priceText.replace('$', ''));\n    expect(priceValue).to.be.lessThan(50);\n  } catch (error) {\n    cy.log('Price validation failed: ' + error.message);\n    throw error;\n  }\n});\ncy.get(_selectors.shoppingCart.checkoutButton).should(\"be.visible\");\ncy.get(_selectors.shoppingCart.removeButton).should(\"be.visible\");\ncy.get(_selectors.shoppingCart.continueButton).should(\"be.visible\");",
              "err": {},
              "uuid": "67471d67-d1ff-48bf-911a-71cad4848613",
              "parentUUID": "09693514-a88f-4078-ac48-4b3ff13b0ad3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "915dfbdb-ca60-4340-8114-f37865ee25c4",
            "67471d67-d1ff-48bf-911a-71cad4848613"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "59f3ef74-67c4-4963-ab97-f4de3f49c485",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "file": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
          "title": "Current Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct weather data with UK postcode SW1E5JL",
              "fullTitle": "Current Weather API Test should return correct weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body.location.name).to.eq('London');\n  expect(response.body.location.region).to.eq('London');\n  expect(response.body.location.country).to.eq('UK');\n  expect(response.body.location.tz_id).to.eq('Europe/London');\n  expect(response.body).to.have.property('current');\n  expect(response.body.current.condition.text).to.be.oneOf(['Sunny', 'Partly cloudy', 'Clear']);\n  expect(response.body.current.temp_c).to.be.a('number');\n  expect(response.body.current.wind_dir).to.eq('ENE');\n});",
              "err": {},
              "uuid": "0e3f5348-a20a-4223-b038-38ccc6ec9b8c",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90045",
              "fullTitle": "Current Weather API Test should return weather data for query: 90045",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "04cef65e-d9e7-4108-a502-6aeadc07eff0",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: M5V2Z2",
              "fullTitle": "Current Weather API Test should return weather data for query: M5V2Z2",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "22335954-0015-41ea-9360-203ed2f24f49",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: hampshire",
              "fullTitle": "Current Weather API Test should return weather data for query: hampshire",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "3e60bc97-1583-4fc8-848c-633c79e7402f",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Current Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "b98e49c1-f946-4027-bc95-cf883cf5a08d",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Current Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "3d1e1d6b-429e-4832-a11e-b90f624b06df",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Current Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=$£$dsd&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "c78f602b-8fa9-4933-b885-e09401809638",
              "parentUUID": "7e50de35-1cf9-42bd-a5a6-ad933f8c7eb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e3f5348-a20a-4223-b038-38ccc6ec9b8c",
            "04cef65e-d9e7-4108-a502-6aeadc07eff0",
            "22335954-0015-41ea-9360-203ed2f24f49",
            "3e60bc97-1583-4fc8-848c-633c79e7402f",
            "b98e49c1-f946-4027-bc95-cf883cf5a08d",
            "3d1e1d6b-429e-4832-a11e-b90f624b06df",
            "c78f602b-8fa9-4933-b885-e09401809638"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "680c09cb-012a-4512-8a7a-edab876761b3",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "file": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
          "title": "Timezone Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct timezone weather data with UK postcode SW1E5JL",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('London');\n  expect(location.region).to.eq('London');\n  expect(location.country).to.eq('UK');\n  expect(location.lat).to.eq(51.4970016479492);\n  expect(location.lon).to.eq(-0.137999996542931);\n  // expect(location.localtime_epoch).to.eq(1743410712);\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "71720f98-488e-4fa0-bd53-b83d98f19d01",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with Canada postcode M5V2Z2",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with Canada postcode M5V2Z2",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=M5V2Z2&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Toronto');\n  expect(location.region).to.eq('');\n  expect(location.country).to.eq('Canada');\n  expect(location.lat).to.eq(43.6514015197754);\n  expect(location.lon).to.eq(-79.3825988769531);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Toronto');\n});",
              "err": {},
              "uuid": "0e66aa27-02d7-4260-a73f-a9162b124751",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with US postcode 90045",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with US postcode 90045",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=90045&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Los Angeles');\n  expect(location.region).to.eq('California');\n  expect(location.country).to.eq('USA');\n  expect(location.lat).to.eq(33.9631004333496);\n  expect(location.lon).to.eq(-118.393997192383);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Los_Angeles');\n});",
              "err": {},
              "uuid": "77a2894a-a667-49af-99e3-c4ae1c0df1dc",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: basingstoke",
              "fullTitle": "Timezone Weather API Test should return weather data for query: basingstoke",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "07f91028-10f1-44bf-869f-5cd44596294d",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "8a9537e3-a0ba-4dd8-9e63-98882c00a5d5",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "94e6d1aa-7bc1-4e35-bf8e-d1fdf643d266",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Timezone Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=324234&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "34a26f14-d6a9-44f5-889e-0b756d1c56b1",
              "parentUUID": "93bdeda4-7123-4111-bc53-b5c844e9a8b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71720f98-488e-4fa0-bd53-b83d98f19d01",
            "0e66aa27-02d7-4260-a73f-a9162b124751",
            "77a2894a-a667-49af-99e3-c4ae1c0df1dc",
            "07f91028-10f1-44bf-869f-5cd44596294d",
            "8a9537e3-a0ba-4dd8-9e63-98882c00a5d5",
            "94e6d1aa-7bc1-4e35-bf8e-d1fdf643d266",
            "34a26f14-d6a9-44f5-889e-0b756d1c56b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fe669881-d6eb-4635-90cb-6e16bc2b6f7c",
      "title": "",
      "fullFile": "cypress/e2e/saucedemo.cy.js",
      "file": "cypress/e2e/saucedemo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12d1e43c-b71d-49c5-8a58-49faa6526d0d",
          "title": "Sauce Lab E2E Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login succcessfully without remember me ticked",
              "fullTitle": "Sauce Lab E2E Flow login succcessfully without remember me ticked",
              "timedOut": null,
              "duration": 1372,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "19dc8c76-d1d2-4e2f-9f42-3d82b2f6cc35",
              "parentUUID": "12d1e43c-b71d-49c5-8a58-49faa6526d0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add sauce labs backpack to the shopping cart successfully",
              "fullTitle": "Sauce Lab E2E Flow add sauce labs backpack to the shopping cart successfully",
              "timedOut": null,
              "duration": 1179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login successfully\ncy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");\n// Add Sauce Labs Backpack to shopping cart\ncy.addSauceLabBackPackToShoppingCart();\ncy.get(_selectors.productList.inventoryItemPrice).should('be.visible').and('contain', '$29.99');\ncy.get(_selectors.productList.addToCartButton).should(\"not.exist\");\ncy.get(_selectors.productList.removeSauceLabBackPackButton).should(\"be.visible\");\n// View the shopping cart\ncy.clickToViewShoppingCart();\ncy.get(_selectors.productList.inventoryItemName).should(\"contain\", \"Sauce Labs Backpack\");\ncy.get('.inventory_item_price').should('be.visible').then($price => {\n  const priceText = $price.text();\n  try {\n    expect(priceText).to.include('$');\n    const priceValue = parseFloat(priceText.replace('$', ''));\n    expect(priceValue).to.be.lessThan(50);\n  } catch (error) {\n    cy.log('Price validation failed: ' + error.message);\n    throw error;\n  }\n});\ncy.get(_selectors.shoppingCart.checkoutButton).should(\"be.visible\");\ncy.get(_selectors.shoppingCart.removeButton).should(\"be.visible\");\ncy.get(_selectors.shoppingCart.continueButton).should(\"be.visible\");",
              "err": {},
              "uuid": "94b908fb-d228-4e0d-9efe-bef6d73d96bf",
              "parentUUID": "12d1e43c-b71d-49c5-8a58-49faa6526d0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19dc8c76-d1d2-4e2f-9f42-3d82b2f6cc35",
            "94b908fb-d228-4e0d-9efe-bef6d73d96bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e9a08f72-3696-497b-a56d-70f11502ad73",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "file": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90ab3e88-2b79-4f34-99f5-d811720eab68",
          "title": "Current Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct weather data with UK postcode SW1E5JL",
              "fullTitle": "Current Weather API Test should return correct weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body.location.name).to.eq('London');\n  expect(response.body.location.region).to.eq('London');\n  expect(response.body.location.country).to.eq('UK');\n  expect(response.body.location.tz_id).to.eq('Europe/London');\n  expect(response.body).to.have.property('current');\n  expect(response.body.current.condition.text).to.be.oneOf(['Sunny', 'Partly cloudy', 'Clear']);\n  expect(response.body.current.temp_c).to.be.a('number');\n  expect(response.body.current.wind_dir).to.eq('ENE');\n});",
              "err": {},
              "uuid": "a19f24ba-3ee8-4b03-aac0-288235309b3d",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90045",
              "fullTitle": "Current Weather API Test should return weather data for query: 90045",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "05f04994-3514-4d58-81f2-f3989372895e",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: M5V2Z2",
              "fullTitle": "Current Weather API Test should return weather data for query: M5V2Z2",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "630e4ede-1623-4352-92ed-e2326fa6132e",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: hampshire",
              "fullTitle": "Current Weather API Test should return weather data for query: hampshire",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "e6eede9b-d051-44ca-8cfa-1a2b5a34783c",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Current Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 38,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "fbd97b63-c364-412d-ac96-94c142bd7b84",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Current Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "602ff0d9-82aa-42a8-a12b-ea5f3e38be26",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Current Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=$£$dsd&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "0241feaa-11fd-48d8-a01a-6a1d926fbe22",
              "parentUUID": "90ab3e88-2b79-4f34-99f5-d811720eab68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a19f24ba-3ee8-4b03-aac0-288235309b3d",
            "05f04994-3514-4d58-81f2-f3989372895e",
            "630e4ede-1623-4352-92ed-e2326fa6132e",
            "e6eede9b-d051-44ca-8cfa-1a2b5a34783c",
            "fbd97b63-c364-412d-ac96-94c142bd7b84",
            "602ff0d9-82aa-42a8-a12b-ea5f3e38be26",
            "0241feaa-11fd-48d8-a01a-6a1d926fbe22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8a1f37f8-c914-48c4-82e4-88b951952b0e",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "file": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38375b57-d130-48ee-9211-92974ea243a9",
          "title": "Timezone Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct timezone weather data with UK postcode SW1E5JL",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('London');\n  expect(location.region).to.eq('London');\n  expect(location.country).to.eq('UK');\n  expect(location.lat).to.eq(51.4970016479492);\n  expect(location.lon).to.eq(-0.137999996542931);\n  // expect(location.localtime_epoch).to.eq(1743410712);\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "1d66792a-b34e-4613-9c58-682d66f85559",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with Canada postcode M5V2Z2",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with Canada postcode M5V2Z2",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=M5V2Z2&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Toronto');\n  expect(location.region).to.eq('');\n  expect(location.country).to.eq('Canada');\n  expect(location.lat).to.eq(43.6514015197754);\n  expect(location.lon).to.eq(-79.3825988769531);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Toronto');\n});",
              "err": {},
              "uuid": "c849cd3e-aa1f-42e1-918d-5c8c32c2aaf8",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with US postcode 90045",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with US postcode 90045",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=90045&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Los Angeles');\n  expect(location.region).to.eq('California');\n  expect(location.country).to.eq('USA');\n  expect(location.lat).to.eq(33.9631004333496);\n  expect(location.lon).to.eq(-118.393997192383);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Los_Angeles');\n});",
              "err": {},
              "uuid": "dcad3ebd-50cd-46e1-a57c-ae6c48bb85fc",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: basingstoke",
              "fullTitle": "Timezone Weather API Test should return weather data for query: basingstoke",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "94493cca-ac18-468c-888c-5ab1829be122",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "ca39d44a-9f77-40be-ba01-bcdf528c7243",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "711e6088-2ebc-4009-a653-f3300ad4b6cd",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Timezone Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=324234&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "f209d7e0-7bcc-47a5-bcc0-9806688670c3",
              "parentUUID": "38375b57-d130-48ee-9211-92974ea243a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d66792a-b34e-4613-9c58-682d66f85559",
            "c849cd3e-aa1f-42e1-918d-5c8c32c2aaf8",
            "dcad3ebd-50cd-46e1-a57c-ae6c48bb85fc",
            "94493cca-ac18-468c-888c-5ab1829be122",
            "ca39d44a-9f77-40be-ba01-bcdf528c7243",
            "711e6088-2ebc-4009-a653-f3300ad4b6cd",
            "f209d7e0-7bcc-47a5-bcc0-9806688670c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4e07c67e-50e1-4d23-87c1-aca22ce1fc42",
      "title": "",
      "fullFile": "cypress/e2e/saucedemo.cy.js",
      "file": "cypress/e2e/saucedemo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c997f72-78aa-44a7-b4e5-e4467d58e03f",
          "title": "Sauce Lab E2E Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login succcessfully without remember me ticked",
              "fullTitle": "Sauce Lab E2E Flow login succcessfully without remember me ticked",
              "timedOut": null,
              "duration": 1343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "74a7efff-6976-433d-b73b-55cfd8e7d627",
              "parentUUID": "9c997f72-78aa-44a7-b4e5-e4467d58e03f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add sauce labs backpack to the shopping cart successfully",
              "fullTitle": "Sauce Lab E2E Flow add sauce labs backpack to the shopping cart successfully",
              "timedOut": null,
              "duration": 1200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login successfully\ncy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");\n// Add Sauce Labs Backpack to shopping cart\ncy.addSauceLabBackPackToShoppingCart();\ncy.get(_pageObjects.productList.inventoryItemPrice).should('be.visible').and('contain', '$29.99');\ncy.get(_pageObjects.productList.addToCartButton).should(\"not.exist\");\ncy.get(_pageObjects.productList.removeSauceLabBackPackButton).should(\"be.visible\");\n// View the shopping cart\ncy.clickToViewShoppingCart();\ncy.get(_pageObjects.productList.inventoryItemName).should(\"contain\", \"Sauce Labs Backpack\");\ncy.get('.inventory_item_price').should('be.visible').then($price => {\n  const priceText = $price.text();\n  try {\n    expect(priceText).to.include('$');\n    const priceValue = parseFloat(priceText.replace('$', ''));\n    expect(priceValue).to.be.lessThan(50);\n  } catch (error) {\n    cy.log('Price validation failed: ' + error.message);\n    throw error;\n  }\n});\ncy.get(_pageObjects.shoppingCart.checkoutButton).should(\"be.visible\");\ncy.get(_pageObjects.shoppingCart.removeButton).should(\"be.visible\");\ncy.get(_pageObjects.shoppingCart.continueButton).should(\"be.visible\");",
              "err": {},
              "uuid": "cfab34f7-09b7-45d6-8a6c-f6fe194fc3f1",
              "parentUUID": "9c997f72-78aa-44a7-b4e5-e4467d58e03f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74a7efff-6976-433d-b73b-55cfd8e7d627",
            "cfab34f7-09b7-45d6-8a6c-f6fe194fc3f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fe5a197f-8317-460e-9ed3-615b42b8ad77",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "file": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
          "title": "Current Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct weather data with UK postcode SW1E5JL",
              "fullTitle": "Current Weather API Test should return correct weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body.location.name).to.eq('London');\n  expect(response.body.location.region).to.eq('London');\n  expect(response.body.location.country).to.eq('UK');\n  expect(response.body.location.tz_id).to.eq('Europe/London');\n  expect(response.body).to.have.property('current');\n  expect(response.body.current.condition.text).to.be.oneOf(['Sunny', 'Partly cloudy', 'Clear']);\n  expect(response.body.current.temp_c).to.be.a('number');\n  expect(response.body.current.wind_dir).to.eq('ENE');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "a0207ae8-586f-42cc-8487-18215320f7a8",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90045",
              "fullTitle": "Current Weather API Test should return weather data for query: 90045",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "0de1ea0e-e4ea-44aa-a681-80bc53563327",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: M5V2Z2",
              "fullTitle": "Current Weather API Test should return weather data for query: M5V2Z2",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "2778a9f8-963c-4275-93ca-e71eb21a9f01",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: hampshire",
              "fullTitle": "Current Weather API Test should return weather data for query: hampshire",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "304be49e-9a14-4c12-8e71-6882ab2dffee",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Current Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "f830b370-6223-4fee-a020-081a2483205d",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Current Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "65ffcffd-7793-4aea-b306-f11b7b93fbae",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Current Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=$£$dsd&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "6006041f-ab16-4e39-b8b1-ef923771bb45",
              "parentUUID": "e0bb780d-48ff-44e4-b12a-a6cf1bf8f90a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0207ae8-586f-42cc-8487-18215320f7a8",
            "0de1ea0e-e4ea-44aa-a681-80bc53563327",
            "2778a9f8-963c-4275-93ca-e71eb21a9f01",
            "304be49e-9a14-4c12-8e71-6882ab2dffee",
            "f830b370-6223-4fee-a020-081a2483205d",
            "65ffcffd-7793-4aea-b306-f11b7b93fbae",
            "6006041f-ab16-4e39-b8b1-ef923771bb45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ef154778-e3ff-4561-9202-0c614514f75e",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "file": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
          "title": "Timezone Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct timezone weather data with UK postcode SW1E5JL",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('London');\n  expect(location.region).to.eq('London');\n  expect(location.country).to.eq('UK');\n  expect(location.lat).to.eq(51.4970016479492);\n  expect(location.lon).to.eq(-0.137999996542931);\n  // expect(location.localtime_epoch).to.eq(1743410712);\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "77a114e2-221f-4089-8664-2c050f1793c3",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with Canada postcode M5V2Z2",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with Canada postcode M5V2Z2",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=M5V2Z2&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Toronto');\n  expect(location.region).to.eq('');\n  expect(location.country).to.eq('Canada');\n  expect(location.lat).to.eq(43.6514015197754);\n  expect(location.lon).to.eq(-79.3825988769531);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Toronto');\n});",
              "err": {},
              "uuid": "cdb254c8-6690-4a2a-b4ed-a36dcf95e442",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with US postcode 90045",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with US postcode 90045",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=90045&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Los Angeles');\n  expect(location.region).to.eq('California');\n  expect(location.country).to.eq('USA');\n  expect(location.lat).to.eq(33.9631004333496);\n  expect(location.lon).to.eq(-118.393997192383);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Los_Angeles');\n});",
              "err": {},
              "uuid": "cf523f5a-a611-4b50-be3b-0fa38fc724c6",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: basingstoke",
              "fullTitle": "Timezone Weather API Test should return weather data for query: basingstoke",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "18b07194-8971-42f6-b98b-ac6090d90e04",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "025eb40a-25bc-4ea5-a189-f4e04b34983f",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "0f1eb1a6-3fda-444b-98e1-e2d0853a3a5a",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Timezone Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=324234&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "83435c9d-14b6-4cf3-82ec-f3d637eb591c",
              "parentUUID": "45186ed5-3afc-4ee6-bdf2-c617915f8171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77a114e2-221f-4089-8664-2c050f1793c3",
            "cdb254c8-6690-4a2a-b4ed-a36dcf95e442",
            "cf523f5a-a611-4b50-be3b-0fa38fc724c6",
            "18b07194-8971-42f6-b98b-ac6090d90e04",
            "025eb40a-25bc-4ea5-a189-f4e04b34983f",
            "0f1eb1a6-3fda-444b-98e1-e2d0853a3a5a",
            "83435c9d-14b6-4cf3-82ec-f3d637eb591c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2adacc85-bfb4-4a1b-a0c0-d6aa570e51c4",
      "title": "",
      "fullFile": "cypress/e2e/saucedemo.cy.js",
      "file": "cypress/e2e/saucedemo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2dfbe2e0-c420-4adc-a95f-e81ef93c9423",
          "title": "Sauce Lab E2E Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login succcessfully without remember me ticked",
              "fullTitle": "Sauce Lab E2E Flow login succcessfully without remember me ticked",
              "timedOut": null,
              "duration": 1300,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "bdeef9f9-54fd-49ad-abd5-0264d752cf83",
              "parentUUID": "2dfbe2e0-c420-4adc-a95f-e81ef93c9423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add sauce labs backpack to the shopping cart successfully",
              "fullTitle": "Sauce Lab E2E Flow add sauce labs backpack to the shopping cart successfully",
              "timedOut": null,
              "duration": 1230,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login successfully\ncy.loginSuccessfullyIntoSauceLab(username, password);\ncy.url().should(\"contain\", \"https://www.saucedemo.com/inventory.html\");\n// Add Sauce Labs Backpack to shopping cart\ncy.addSauceLabBackPackToShoppingCart();\ncy.get(_pageObjects.productList.inventoryItemPrice).should('be.visible').and('contain', '$29.99');\ncy.get(_pageObjects.productList.addToCartButton).should(\"not.exist\");\ncy.get(_pageObjects.productList.removeSauceLabBackPackButton).should(\"be.visible\");\n// View the shopping cart\ncy.clickToViewShoppingCart();\ncy.get(_pageObjects.productList.inventoryItemName).should(\"contain\", \"Sauce Labs Backpack\");\ncy.get('.inventory_item_price').should('be.visible').then($price => {\n  const priceText = $price.text();\n  try {\n    expect(priceText).to.include('$');\n    const priceValue = parseFloat(priceText.replace('$', ''));\n    expect(priceValue).to.be.lessThan(50);\n  } catch (error) {\n    cy.log('Price validation failed: ' + error.message);\n    throw error;\n  }\n});\ncy.get(_pageObjects.shoppingCart.checkoutButton).should(\"be.visible\");\ncy.get(_pageObjects.shoppingCart.removeButton).should(\"be.visible\");\ncy.get(_pageObjects.shoppingCart.continueButton).should(\"be.visible\");",
              "err": {},
              "uuid": "b086fd0f-2db8-4312-a758-04e3aafff743",
              "parentUUID": "2dfbe2e0-c420-4adc-a95f-e81ef93c9423",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdeef9f9-54fd-49ad-abd5-0264d752cf83",
            "b086fd0f-2db8-4312-a758-04e3aafff743"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2530,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be76254d-99d9-4f75-a6d6-8dcb4a2e54b2",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "file": "cypress/e2e/weatherApi/currentWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "186582e9-6e31-4662-8569-3a3303991c52",
          "title": "Current Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct weather data with UK postcode SW1E5JL",
              "fullTitle": "Current Weather API Test should return correct weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body.location.name).to.eq('London');\n  expect(response.body.location.region).to.eq('London');\n  expect(response.body.location.country).to.eq('UK');\n  expect(response.body.location.tz_id).to.eq('Europe/London');\n  expect(response.body).to.have.property('current');\n  expect(response.body.current.condition.text).to.be.oneOf(['Sunny', 'Partly cloudy', 'Clear']);\n  expect(response.body.current.temp_c).to.be.a('number');\n  expect(response.body.current.wind_dir).to.eq('ENE');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "22072463-0baf-410a-8fca-7843f5965a87",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90045",
              "fullTitle": "Current Weather API Test should return weather data for query: 90045",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "dfc2e8ee-f047-45e6-a6bf-5d15a0eb118e",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: M5V2Z2",
              "fullTitle": "Current Weather API Test should return weather data for query: M5V2Z2",
              "timedOut": null,
              "duration": 47,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "f463ab43-9fc8-4a05-a189-2f92a5c807a0",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: hampshire",
              "fullTitle": "Current Weather API Test should return weather data for query: hampshire",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "abdc8cc3-0229-4253-9f32-5963ffe245a9",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Current Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "7ed29a68-95cf-45d9-b39a-9db19f2240a2",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Current Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  expect(response.body).to.have.property('current');\n  expect(response.body).to.be.jsonSchema(weatherSchema);\n});",
              "err": {},
              "uuid": "9e673bbd-a3ec-4eb8-8bce-eb4f138b06ce",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Current Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/current.json?q=$£$dsd&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "e1842e37-7e29-4705-87b6-0ef2a1cfe667",
              "parentUUID": "186582e9-6e31-4662-8569-3a3303991c52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22072463-0baf-410a-8fca-7843f5965a87",
            "dfc2e8ee-f047-45e6-a6bf-5d15a0eb118e",
            "f463ab43-9fc8-4a05-a189-2f92a5c807a0",
            "abdc8cc3-0229-4253-9f32-5963ffe245a9",
            "7ed29a68-95cf-45d9-b39a-9db19f2240a2",
            "9e673bbd-a3ec-4eb8-8bce-eb4f138b06ce",
            "e1842e37-7e29-4705-87b6-0ef2a1cfe667"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e72f29d-d958-4ab3-bfbc-04e633bf4c35",
      "title": "",
      "fullFile": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "file": "cypress/e2e/weatherApi/timezoneWeather.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
          "title": "Timezone Weather API Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct timezone weather data with UK postcode SW1E5JL",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with UK postcode SW1E5JL",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=SW1E5JL&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('London');\n  expect(location.region).to.eq('London');\n  expect(location.country).to.eq('UK');\n  expect(location.lat).to.eq(51.4970016479492);\n  expect(location.lon).to.eq(-0.137999996542931);\n  // expect(location.localtime_epoch).to.eq(1743410712);\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "e8a06447-3ced-4e2d-a3ae-ed1a3a8fed01",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with Canada postcode M5V2Z2",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with Canada postcode M5V2Z2",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=M5V2Z2&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Toronto');\n  expect(location.region).to.eq('');\n  expect(location.country).to.eq('Canada');\n  expect(location.lat).to.eq(43.6514015197754);\n  expect(location.lon).to.eq(-79.3825988769531);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Toronto');\n});",
              "err": {},
              "uuid": "b34a37a2-7185-4b56-bbb3-de16a903f720",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct timezone weather data with US postcode 90045",
              "fullTitle": "Timezone Weather API Test should return correct timezone weather data with US postcode 90045",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=90045&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.name).to.eq('Los Angeles');\n  expect(location.region).to.eq('California');\n  expect(location.country).to.eq('USA');\n  expect(location.lat).to.eq(33.9631004333496);\n  expect(location.lon).to.eq(-118.393997192383);\n  // expect(location.localtime_epoch).to.eq(1743411334);\n  expect(location.tz_id).to.eq('America/Los_Angeles');\n});",
              "err": {},
              "uuid": "05544b47-3a26-4f6d-9c01-1eae4b880124",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: basingstoke",
              "fullTitle": "Timezone Weather API Test should return weather data for query: basingstoke",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "4ab404f2-ca99-45ce-8372-cdecffdace47",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 90.202.148.160",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 90.202.148.160",
              "timedOut": null,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "078d4bb8-0254-438a-8f5c-7cb1d0e8fbd5",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return weather data for query: 51.26249, -1.08708",
              "fullTitle": "Timezone Weather API Test should return weather data for query: 51.26249, -1.08708",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=${encodeURIComponent(query.q)}&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('location');\n  const location = response.body.location;\n  expect(location.region).to.eq('Hampshire');\n  expect(location.country).to.eq('United Kingdom');\n  expect(location.tz_id).to.eq('Europe/London');\n});",
              "err": {},
              "uuid": "693b3dac-d9cd-4a26-a233-b342384036d7",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid location query",
              "fullTitle": "Timezone Weather API Test should return error for invalid location query",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `https://api.weatherapi.com/v1/timezone.json?q=324234&key=${weatherApiToken}`,\n  headers: {\n    accept: 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('error');\n  expect(response.body.error.code).to.eq(1006);\n  expect(response.body.error.message).to.eq('No matching location found.');\n});",
              "err": {},
              "uuid": "b08871e8-f5d4-4649-b21f-8d97d88f44ca",
              "parentUUID": "6f57fc6d-4387-4dea-9d5c-46d3853698e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8a06447-3ced-4e2d-a3ae-ed1a3a8fed01",
            "b34a37a2-7185-4b56-bbb3-de16a903f720",
            "05544b47-3a26-4f6d-9c01-1eae4b880124",
            "4ab404f2-ca99-45ce-8372-cdecffdace47",
            "078d4bb8-0254-438a-8f5c-7cb1d0e8fbd5",
            "693b3dac-d9cd-4a26-a233-b342384036d7",
            "b08871e8-f5d4-4649-b21f-8d97d88f44ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}